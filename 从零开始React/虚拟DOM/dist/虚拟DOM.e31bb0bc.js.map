{"version":3,"sources":["index.js"],"names":["createElement","tag","attrs","children","React","element","console","log","render","vnode","container","textNode","document","createTextNode","appendChild","dom","Object","keys","forEach","key","setAttribute","child","ReactDOM","innerHTML","getElementById","tick","Date","toLocaleTimeString","setInterval"],"mappings":"AAAA;;AACA;;;;;;AAMA,SAASA,aAAT,CAAuBC,GAAvB,EAA4BC,KAA5B,EAAgD;AAAA,oCAAVC,QAAU;AAAVA,IAAAA,QAAU;AAAA;;AAC9C,SAAO;AACLF,IAAAA,GAAG,EAAHA,GADK;AAELC,IAAAA,KAAK,EAALA,KAFK;AAGLC,IAAAA,QAAQ,EAARA;AAHK,GAAP;AAKD;;AAED,IAAMC,KAAK,GAAG;AACZJ,EAAAA,aAAa,EAAbA;AADY,CAAd;AAIA,IAAMK,OAAO,GACX;AAAK,EAAA,UAAU,EAAC;AAAhB,YAEE,2CAFF,CADF;AAMAC,OAAO,CAACC,GAAR,CAAYF,OAAZ;AAEA;;;;;;AAKA,SAASG,OAAT,CAAgBC,KAAhB,EAAuBC,SAAvB,EAAkC;AAChC,MAAI,OAAOD,KAAP,KAAiB,QAArB,EAA+B;AAC7B,QAAME,QAAQ,GAAGC,QAAQ,CAACC,cAAT,CAAwBJ,KAAxB,CAAjB;AACA,WAAOC,SAAS,CAACI,WAAV,CAAsBH,QAAtB,CAAP;AACD;;AAED,MAAMI,GAAG,GAAGH,QAAQ,CAACZ,aAAT,CAAuBS,KAAK,CAACR,GAA7B,CAAZ;;AACA,MAAIQ,KAAK,CAACP,KAAV,EAAiB;AACfc,IAAAA,MAAM,CAACC,IAAP,CAAYR,KAAK,CAACP,KAAlB,EAAyBgB,OAAzB,CAAiC,UAAAC,GAAG,EAAI;AACtC,UAAIA,GAAG,KAAK,WAAZ,EAAyB;AACvB;AACAA,QAAAA,GAAG,GAAG,OAAN;AACD;;AACDJ,MAAAA,GAAG,CAACK,YAAJ,CAAiBD,GAAjB,EAAsBV,KAAK,CAACP,KAAN,CAAYiB,GAAZ,CAAtB;AACD,KAND;AAOD;;AAEDV,EAAAA,KAAK,CAACN,QAAN,CAAee,OAAf,CAAuB,UAAAG,KAAK;AAAA,WAAIb,OAAM,CAACa,KAAD,EAAQN,GAAR,CAAV;AAAA,GAA5B,EAjBgC,CAiBqB;;AAErD,SAAOL,SAAS,CAACI,WAAV,CAAsBC,GAAtB,CAAP,CAnBgC,CAmBG;AACpC;AAED;;;;;;;AAKA,IAAMO,QAAQ,GAAG;AACfd,EAAAA,MAAM,EAAE,gBAACC,KAAD,EAAQC,SAAR,EAAsB;AAC5BA,IAAAA,SAAS,CAACa,SAAV,GAAsB,EAAtB;AACA,WAAOf,OAAM,CAACC,KAAD,EAAQC,SAAR,CAAb;AACD;AAJc,CAAjB;AAOAY,QAAQ,CAACd,MAAT,CAAgB,gDAAhB,EAAwCI,QAAQ,CAACY,cAAT,CAAwB,MAAxB,CAAxC;;AAEA,SAASC,IAAT,GAAgB;AACd,MAAMpB,OAAO,GACX,iCACE,gDADF,EAEE,0CAAW,IAAIqB,IAAJ,GAAWC,kBAAX,EAAX,MAFF,CADF;AAMAL,EAAAA,QAAQ,CAACd,MAAT,CAAgBH,OAAhB,EAAyBO,QAAQ,CAACY,cAAT,CAAwB,MAAxB,CAAzB;AACD;;AAEDI,WAAW,CAACH,IAAD,EAAO,IAAP,CAAX","file":"虚拟DOM.e31bb0bc.js","sourceRoot":"..","sourcesContent":["// 使用 JSX 编写的代码将会被转换成使用 React.createElement() 的形式。\r\n/**\r\n *\r\n * @param {*} tag 标签\r\n * @param {*} attrs 属性\r\n * @param  {...any} children 标签内容  也可是子标签\r\n */\r\nfunction createElement(tag, attrs, ...children) {\r\n  return {\r\n    tag,\r\n    attrs,\r\n    children\r\n  };\r\n}\r\n\r\nconst React = {\r\n  createElement\r\n};\r\n\r\nconst element = (\r\n  <div className1=\"cln abs\">\r\n    hello\r\n    <span>world!</span>\r\n  </div>\r\n);\r\nconsole.log(element);\r\n\r\n/**\r\n * 将虚拟DOM渲染到真实DOM上\r\n * @param {*} vnode createElement返回的对象即虚拟dom\r\n * @param {*} container 挂载的目标DOM\r\n */\r\nfunction render(vnode, container) {\r\n  if (typeof vnode === \"string\") {\r\n    const textNode = document.createTextNode(vnode);\r\n    return container.appendChild(textNode);\r\n  }\r\n\r\n  const dom = document.createElement(vnode.tag);\r\n  if (vnode.attrs) {\r\n    Object.keys(vnode.attrs).forEach(key => {\r\n      if (key === \"className\") {\r\n        // 当属性名为className时，改回class\r\n        key = \"class\";\r\n      }\r\n      dom.setAttribute(key, vnode.attrs[key]);\r\n    });\r\n  }\r\n\r\n  vnode.children.forEach(child => render(child, dom)); // 递归渲染子节点\r\n\r\n  return container.appendChild(dom); // 将渲染结果挂载到真正的DOM上\r\n}\r\n\r\n/**\r\n * 将render挂载到reactDOMN上\r\n * 为了防止多次调用render时不会清楚原有内容\r\n * 先将其清空\r\n */\r\nconst ReactDOM = {\r\n  render: (vnode, container) => {\r\n    container.innerHTML = \"\";\r\n    return render(vnode, container);\r\n  }\r\n};\r\n\r\nReactDOM.render(<h1>Hello, world!</h1>, document.getElementById(\"root\"));\r\n\r\nfunction tick() {\r\n  const element = (\r\n    <div>\r\n      <h1>Hello, world!</h1>\r\n      <h2>It is {new Date().toLocaleTimeString()}.</h2>\r\n    </div>\r\n  );\r\n  ReactDOM.render(element, document.getElementById(\"root\"));\r\n}\r\n\r\nsetInterval(tick, 1000);\r\n"]}